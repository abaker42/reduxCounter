{"ast":null,"code":"import redux from 'redux';\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let dispatchAction = arguments.length > 1 ? arguments[1] : undefined;\n  if (dispatchAction.type === 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n  if (dispatchAction.type === 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n  return state;\n};\nconst store = redux.createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["redux","counterReducer","state","counter","dispatchAction","type","store","createStore"],"sources":["C:/WorkSpace/React/reduxCounter/src/store/index.js"],"sourcesContent":["import redux from 'redux';\r\n\r\nconst counterReducer = (state = { counter: 0 }, dispatchAction) => {\r\n\tif (dispatchAction.type === 'increment') {\r\n\t\treturn { counter: state.counter + 1 };\r\n\t}\r\n\r\n\tif (dispatchAction.type === 'decrement') {\r\n\t\treturn { counter: state.counter - 1 };\r\n\t}\r\n\r\n\treturn state;\r\n};\r\n\r\nconst store = redux.createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAG,YAA4C;EAAA,IAA3CC,KAAK,uEAAG;IAAEC,OAAO,EAAE;EAAE,CAAC;EAAA,IAAEC,cAAc;EAC7D,IAAIA,cAAc,CAACC,IAAI,KAAK,WAAW,EAAE;IACxC,OAAO;MAAEF,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG;IAAE,CAAC;EACtC;EAEA,IAAIC,cAAc,CAACC,IAAI,KAAK,WAAW,EAAE;IACxC,OAAO;MAAEF,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG;IAAE,CAAC;EACtC;EAEA,OAAOD,KAAK;AACb,CAAC;AAED,MAAMI,KAAK,GAAGN,KAAK,CAACO,WAAW,CAACN,cAAc,CAAC;AAE/C,eAAeK,KAAK"},"metadata":{},"sourceType":"module"}